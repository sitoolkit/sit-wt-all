accept=accept

add.param=The parameter was stored.{}={}
add.tags.error=An exception occurred during link addition processing

base.evidence.copy.error=An exception occurred in the evidence copying process
base.evidence.compare=A screen shot comparison with criteria evidence {} has been made.
base.evidence.error=There is no standard evidence
base.evidence.set=Confirm as standard evidence {}
base.dir.none=Criteria evidence directory does not exist {}
base.screenshot.none=Screenshot not in standard evidence directory {}

body.size=bodySize {}

browser.start=Start the browser {}
browser.start.operation=Please operate the browser when the browser starts up.

build.message=The element specified by the locator ({}) was not found on the screen. There is a possibility that the locator is wrong or the operation timing is early.

byte.array.error=An exception occurred in byte array conversion processing

case.empty=There are no cases in the test script {} {}
case.execute=Execute the case {}
case.number.error=The specified case number ["{}"] is invalid. Case number that can be specified:
case.skip=Skip the case [{}] [{} {}] operation

check.element=checkElement:{}, clickElement:{}, checked:{}

click=click

cmd.error=It is an illegal operation.
cmd.exception=The command terminated abnormally.
cmd.execute=Execute the command [{}]
cmd.result=Command execution result {}


compare.screenshot=Generate comparison evidence {} <-> {}
compare.screenshot.error=An exception occurred in the comparison evidence generation process

cookie.delete=Delete cookie {}

copy.base.screenshots=Copy criteria screenshot to evidence directory
copy.screenshot.error=An exception occurred in the screen shot copy process

debug.execute=Run the test in debug mode.
debug.test=debugging test context : {}
debug.index=currentIndex:{}, testStepCount:{}
debug.break.point=A breakpoint is set.

dismiss=dismiss

download=download
download2=Download {} {} -> {}
download.exists={} has already been downloaded {}

driver.screenshot.error=Driver {} can not get screenshot.

element.found=An element corresponding to the locator ({}) was found. {}
element.info=elements:{} rectanble maxX:{}, minY:{}, maxX:{}, maxY:{}
element.index=The index of {} ({}) is {}
element.not.found=Element corresponding to locator ({}) was not found.
element.position=Element: {}, element position: {}, reference position: {}


enter.click=To display the operation method, type the Enter key.
enter.pause.click=To pause execution, type the Enter key.

empty=

evidence.error=I do not have evidence
evidence.dirs.empty=There is no evidence folder {}
evidence.mkdirs=I created an evidence output directory. {}
evidence.output=Output evidence {}
evidence.generate.error=An exception occurred in the evidence generation process
evidence.info={} has {} evidence for {}

exception=exception

execute=execute : {}

export.error=An unexpected error occurred while performing the export.

failure=failure

ffInstaller.exists=Firefox has been downloaded {}

firefox.exist=Firefox is installed {}
firefox.download=Download Firefox {} -> {}
firefox.download.exception=An exception occurred downloading Firefox
firefox.install=Install Firefox
firefox.install2=Install Firefox {}
firefox.install.exception=An exception occurred in the installation of Firefox
firefox.mount=Mount Firefox installer
firefox.unmount=Unmount Firefox installer
firefox.start=Start Firefox {}
firefox.sit.install=Firefox for SIT - WT is not installed

format.valid=The format is invalid.

frame.switch=Switch frame to {}

guidance.file.open=Expand the guidance file {}
guidance.file.open.error=An exception occurred in deploying the guidance file

input=input
input.append=Input (additional writing)
input.overwite=Input (overwrite)

install=Install {}
install.exists={} is already installed {}

installer.execute={} run the installer {}

invoke.method=invoke method {} {}
invoke.error=invoke method {} {} throws exception {}

key.strok=Key stroke

line.draw=Draw lines until ({}, {}) of the canvas ({}).
line.draw2=Draw lines from ({}, {}) of the canvas ({}) to ({}, {}).

locator.error=Locator ({}) is invalid. {}

mask.error=An exception occurred in masking image file
mask.evidence.generate=Generate masked evidence
mask.evidence.generated=Generated masked evidence {}
mask.generate=Masked image file generated {}
mask.load.error=An unexpected error occurred when reading the mask file

method.name.error={} must be a findElement.

msg={}

object.model.error=The target object of {} must be WebDriver type or its subclass type

open=Expand {} {} -> {}
open.script.error=Could not open converted script

origonal.image.info=origonal image w:{}, h:{} sub image x:{}, y:{}, w:{}, h{} file:{}

os.unsupport=It is an unsupported OS

page.dir.generate=Create screen specification directory. {}
page.load.execute=Execute {}.
page.load.start=Start loading the page. {} {}
page.script=Process scripts below the screen specification directory. {}

param.empty=There are no stored parameters.

pattern.xx={} ({}) {}
pattern.xx.yy={} {} to {} ({})
pattern.xx.url={} ({}) {}} ({}) <a href=\"{}\" target=\"evidence\">Show evidence</a>
pattern.xx.yy.url={} {} To {} ({}) ({}) <a href=\"{}\" target=\"evidence\">Show evidence</a>

prepare.test=prepare test context {}

property.load=Load properties {}
property.not.found=Property file not found.
property.save.exception=An exception occurred while saving the property

proxy.error=An exception occurred while getting the proxy

put=Place {} {} -> {}

restart={} {} returned null It will re-execute

reinvoke.method=re-invoke method {} {}

report.error=Report file missing
report.open.error=Failed to open report file

resource.copy.error=An exception occurred in the resource file copy process

run.case=Run the test script.{} {} {}

safari.dawnload=Download Safari Driver {} -> {}
safari.install=Install Safari Driver {}

scanner=[{}] {}

screenshot.compare=Compare screen shots {} {} <-> {}
screenshot.generate=Mask screen shot {}
screenshot.get.error=Screenshot acquisition failed {}
screenshot.match=Screenshot matched criteria {}
screenshot.unmatch=Screenshot did not match criteria {}
screenshot.resize.wait.error=Exception occurs when waiting for screenshot resizing processing
screenshot.resize.error=Exception caused by resizing screenshot file {}
screenshot.set=I got a screenshot {}
screenshot.set.error=Screenshot Failed to move file

script.execute=Execute the test script [{}].
script.file.changed=The test script has been changed. I will reread it.
script.last=Test class of test script is up to date {}
script.load=Load test script\u3002{}
script.load2=Load test script\u3002{}, {}
script.path=>java {} [scriptPath sheetName]

selenium.command.unmatched=Selenium command: {} is not supported. The test script operation is output with blanks.
selenium.download=Download Selenium IDE {} -> {}
selenium.exist=Selenium IDE has been downloaded {}
selenium.script.backup=Selenium Saves the script {} -> {}
selenium.script.convert=Convert Selenium script\u3002{}

setup=setUp {} {} {}

show.param=Display stored parameters.{}
show.usage={}

select=select

split.image.error=An exception occurred in the split screen shot process

sql.load=Read the SQL file.[{}]
sql.execute=Run validation SQL.[{}] [{}]

success=success

system.file.exclusion=Since it is a system file, it is excluded from generation processing {}

test.case=>java {} [path/to/TestScript.xlsx!TestSheet#CaseNo]
test.pause=Pause the execution of the test script. Browser operation is possible.
test.restart=Restart test execution.
test.result=Case {} got {}
test.script.appoint=Please specify test script.
test.script=Process scripts below the test script directory.{}
test.step.end=All test steps have ended.
test.step.execute=Step No Execute [{}].
test.step.next={} {}({}){}
test.step.next.prev=Test steps before and after
test.step.last=Set a breakpoint at the last step.
test.step.load=One line of Selenium test script loaded\u3000command:{},target:{},value:{}


thread.sleep.error=Failed to wait for thread
thread.sleep.exception=An exception occurred while waiting for a thread

timestamp.load.error=Failed to read the time stamp file.
timestamp.write.error=Failed to write timestamp file.

trace={}

unexpected.error=An unexpected error occurred.
unexpected.error2=An unexpected error occurred. {}
unexpected.exception=An unexpected exception occurred
unexpected.result=I got a different result from expectation {}

unsupported.operation.error=Driver {} can not operate dialog.

url.open=Open URL {}

var.define=Define the variable {}={}

verify=Make sure that the value of {} ({}) matches the expected value [{}].
verify.select=Make sure that the value selected by {} ({}) matches the expected value {}.
verify.select.unmatch=The value selected by {0} ({1}) is different from the expected value. {2}
verify.unmatch=The value [{2}] of {0} ({1}) is different from expected value [{3}].

wait=Wait {} seconds until {} appears on {} ({}).

warn=
warn2={}

webdriver.start=Start WebDriver driverType:{}, capabilities:{}
webdriver.init=Initialize WebDriver webDriver:{}
webdriver.proxy=Proxy the WebDriver webDriver:{}
webdriver.remote=Connect to RemoteWebDriver:{}
webdriver.android=AndroidDriver connected to:{}
webdriver.ios=Connection destination of IOSDriver:{}
webdriver.reconstruction=Reconstruct WebDriver {}
webdriver.remote.end=Finish RemoteWebDriver session {}
webdriver.stop=Stop WebDriver {}

window.get=Get window position and size
window.size.check=Step No:{} that requires advance acquisition of window size
window.size.set=Set window size to ({}, {})
window.sizen.set.error=The data of setWindowSizen operation is invalid. Examples 900, 600
window.switch=Switch the window to {}
window.no.such.error=Locator: There is no window corresponding to {}. name: {} or title: {} can be specified.

write=I wrote it to a file {}
write.diff.image=Generated diff screen shot {}
write.diff.image.error=Exception occurred in diff screen shot generation processing
